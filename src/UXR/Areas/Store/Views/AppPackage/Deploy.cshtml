@model PLUS.PackageStore.ViewModels.Packages.DeployPackageViewModel

@{
    ViewBag.Title = "Deploy " + ViewBag.App;
}


<h2>Deploy @ViewBag.App package</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelForModel("Version",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @ViewBag.Version
            </div>
        </div>
        <div class="form-group">
            @Html.LabelForModel("Label", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @ViewBag.Label
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <ol id='checkboxes'>
                    @for (int i = 0; i < Model.Groups.Count(); i++)
                    {
                        <li class='expanded'>
                            @Html.CheckBoxFor(model => model.Groups[i].IsSelected) 
                            @Html.DisplayFor(model => model.Groups[i].Name)
                            @Html.HiddenFor(model => model.Groups[i].Name)
                            <ol>
                                @for (int j = 0; j < Model.Groups[i].Nodes.Count(); j++)
                                {
                                    <li>
                                        @Html.CheckBoxFor(model => model.Groups[i].Nodes[j].IsSelected) 
                                        @Html.DisplayFor(model => model.Groups[i].Nodes[j].Name)
                                        @Html.HiddenFor(model => model.Groups[i].Nodes[j].Name)
                                    </li>
                                }
                            </ol>
                        </li>
                    }
                </ol>
                @Html.ValidationMessageFor(model => model.Groups, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.CheckBoxFor(model => model.SaveDeploymentTargets)
            @Html.LabelFor(model => model.SaveDeploymentTargets, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Deploy" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Html.HtmlScriptsCached("bonsaiJs")*@

    <script>
        $('#checkboxes').bonsai({
          expandAll: true,
          checkboxes: true,
          //handleDuplicateCheckboxes: true
        });
    </script>
}