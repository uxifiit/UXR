@model PagedList.IPagedList<PLUS.PackageStore.ViewModels.Packages.PackageViewModel>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>@ViewBag.AppName app packages</h2>

<p>
    @Html.ActionLink("Upload new package", "Upload", "App", new { }, new { })
</p>
<table class="table">
    <tr>
        <th>
            Version
        </th>
        <th>
            Label
        </th>
        <th>
            Nodes
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Version)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Label)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NodesCount)
        </td>
        <td>
            @Html.ActionLink("Deploy", "Deploy", "AppPackage", new { version = item.Version }, new { }) |
            @Html.ActionLink("Download", "Download", "AppPackage", new { version = item.Version }, new { }) |
            @*@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |*@
            @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
            @Html.ActionLink("Delete", "Delete", "AppPackage", new { version = item.Version }, new { })
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@if (Model.Any())
{
    Html.PagedListPager(Model, page => Url.Action("Index", new { page = page })); @*, sortOrder = ViewBag.CurrentSort}));*@
}
